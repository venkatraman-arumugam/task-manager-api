services:
  fluentd:
    image: fluent/fluentd:v1.17.1-1.1
    container_name: $fluentd
    ports:
      - "24224:24224" # Fluentd TCP input
      - "24224:24224/udp" # Fluentd UDP input
    volumes:
      - ./config/:/fluentd/etc # Custom Fluentd configuration
      - ./data/log:/fluentd/log # Logs written by Fluentd
  redis:
    image: redis:latest
    container_name: $redis
    ports:
      - "6379:6379"
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
      - ./data:/data
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: redis
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--dir", "/data"]
  flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: $flask
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - PYTHONPATH=/work
    ports:
      - "5000:5000"
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: flask
    depends_on:
      - redis

  celery:
    container_name: $celery
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/work
    command: celery -A app.task worker --loglevel=info
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: celery
    depends_on:
      - redis